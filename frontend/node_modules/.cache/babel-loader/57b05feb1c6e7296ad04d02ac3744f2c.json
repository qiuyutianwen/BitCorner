{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Fulfilled.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Button, Row, Col, Form, Card, Modal } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport img from '../images/home.png';\nimport { Application } from '../components/export';\nimport Listing from '../components/Listing';\nimport Order from \"../components/Order\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Fulfilled = () => {\n  _s();\n\n  const allOrder = useSelector(state => state.order ? state.order.allOrder : null);\n  const [orders, setOrders] = useState('');\n  useEffect(() => {\n    if (allOrder) setOrders(allOrder);\n  }, [allOrder]);\n  let lists = allOrder.filter(l => l.status === \"Fulfilled\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Fulfilled Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), lists.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"There is no buy order available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        children: lists.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Listing, {\n            value: item,\n            fulfilled: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Fulfilled, \"ctyxg5e3NzgQuo0w6zdMNTW78GY=\", false, function () {\n  return [useSelector];\n});\n\n_c = Fulfilled;\nexport default Fulfilled;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fulfilled\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Fulfilled.js"],"names":["React","useState","useEffect","Jumbotron","Button","Row","Col","Form","Card","Modal","faApple","faAndroid","FontAwesomeIcon","faTimes","img","Application","Listing","Order","useSelector","Fulfilled","allOrder","state","order","orders","setOrders","lists","filter","l","status","margin","textAlign","length","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4CC,IAA5C,EAAkDC,KAAlD,QAA+D,iBAA/D;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oCAAnC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAuB,mCAAvB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYF,QAA1B,GAAqC,IAAjD,CAA5B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGkB,QAAH,EACII,SAAS,CAACJ,QAAD,CAAT;AACP,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAKA,MAAIK,KAAK,GAAGL,QAAQ,CAACM,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAa,WAApC,CAAZ;AACA,sBACI;AAAA,2BACA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKL,KAAK,CAACM,MAAN,KAAiB,CAAjB,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArB,gBAED,QAAC,GAAD;AAAA,kBACKN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,8BACI,QAAC,OAAD;AAAqB,YAAA,KAAK,EAAED,IAA5B;AAAkC,YAAA,SAAS,EAAE;AAA7C,aAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAiBH,CA3BD;;GAAMf,S;UACeD,W;;;KADfC,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Jumbotron, Button, Row, Col, Form, Card, Modal } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport img from '../images/home.png'\nimport { Application } from '../components/export';\nimport Listing from '../components/Listing';\nimport Order from \"../components/Order\"\nimport { useSelector } from 'react-redux';\n\nconst Fulfilled = () => {\n    const allOrder = useSelector((state) => state.order ? state.order.allOrder : null)\n    const [orders, setOrders] = useState('');\n\n    useEffect(() => {\n        if(allOrder)\n            setOrders(allOrder)\n    }, [allOrder])\n    \n    let lists = allOrder.filter((l) => l.status === \"Fulfilled\")\n    return (\n        <>\n        <div style={{margin: \"0 auto\"}}>\n            <h3 style={{textAlign: \"center\"}}>Fulfilled Order</h3>\n            {lists.length === 0 ? <div>There is no buy order available</div>\n            :\n            <Row>\n                {lists.map((item, index) => {\n                    return (\n                        <Listing key={index} value={item} fulfilled={true}/>\n                    )\n                })}\n            </Row>\n            }\n        </div>\n        </>\n    )\n}\n\nexport default Fulfilled"]},"metadata":{},"sourceType":"module"}