{"ast":null,"code":"import { SEND_BILL, UPDATE_BILL, GET_BILL } from '../constants/constant';\nimport setAuthorizationToken from '../utils/validations/setAuthorizationToken';\nimport * as api from '../api/index';\nexport const getBills = userId => async dispatch => {\n  try {\n    console.log('inside getBills', userId);\n    const {\n      data\n    } = await api.fetchBill(userId);\n    console.log('getBills', data);\n    await dispatch({\n      type: GET_BILL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const sendToBill = billInfo => async dispatch => {\n  try {\n    console.log('inside sendBill', billInfo);\n    const {\n      data\n    } = await api.sendBill(billInfo);\n    console.log('sendBill', data);\n    await dispatch({\n      type: SEND_BILL,\n      payload: data\n    });\n    alert(\"Place a new order successfully\");\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updateToBill = billInfo => async dispatch => {\n  try {\n    console.log('inside updateToBill', billInfo);\n    const {\n      data,\n      status\n    } = await api.updateBill(billInfo);\n    console.log('updateToBill', data);\n    await dispatch({\n      type: UPDATE_BILL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const payBill = (billId, paidType, paidAmount, transaction_fee) => async dispatch => {\n  try {\n    console.log('inside payBill', billId, paidType, paidAmount, transaction_fee);\n    const {\n      data\n    } = await api.payBill(billId, paidType, paidAmount, transaction_fee);\n    console.log('payBill', data);\n    await dispatch({\n      type: UPDATE_BILL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/actions/billAction.js"],"names":["SEND_BILL","UPDATE_BILL","GET_BILL","setAuthorizationToken","api","getBills","userId","dispatch","console","log","data","fetchBill","type","payload","error","message","sendToBill","billInfo","sendBill","alert","updateToBill","status","updateBill","payBill","billId","paidType","paidAmount","transaction_fee"],"mappings":"AAAA,SACCA,SADD,EAECC,WAFD,EAGCC,QAHD,QAIO,uBAJP;AAKA,OAAOC,qBAAP,MAAkC,4CAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACvD,MAAI;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,MAA/B;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACO,SAAJ,CAAcL,MAAd,CAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,IAAxB;AACA,UAAMH,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEV,QAAR;AAAkBW,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAd;AACA,GALD,CAKE,OAAOI,KAAP,EAAc;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACA;AACD,CATM;AAWP,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAOV,QAAP,IAAoB;AAC3D,MAAI;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BQ,QAA/B;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACc,QAAJ,CAAaD,QAAb,CAAvB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,IAAxB;AACA,UAAMH,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,SAAR;AAAmBa,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAd;AACAS,IAAAA,KAAK,CAAC,gCAAD,CAAL;AACA,GAND,CAME,OAAOL,KAAP,EAAc;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACA;AACD,CAVM;AAYP,OAAO,MAAMK,YAAY,GAAIH,QAAD,IAAc,MAAOV,QAAP,IAAoB;AAC7D,MAAI;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCQ,QAAnC;AACA,UAAM;AAAEP,MAAAA,IAAF;AAAQW,MAAAA;AAAR,QAAmB,MAAMjB,GAAG,CAACkB,UAAJ,CAAeL,QAAf,CAA/B;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,IAA5B;AACA,UAAMH,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX,WAAR;AAAqBY,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAd;AACA,GALD,CAKE,OAAOI,KAAP,EAAc;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACA;AACD,CATM;AAWP,OAAO,MAAMQ,OAAO,GAAG,CAACC,MAAD,EAASC,QAAT,EAAmBC,UAAnB,EAA+BC,eAA/B,KAAmD,MAAOpB,QAAP,IAAoB;AAC7F,MAAI;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Be,MAA9B,EAAsCC,QAAtC,EAAgDC,UAAhD,EAA4DC,eAA5D;AACA,UAAM;AAAEjB,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACmB,OAAJ,CAAYC,MAAZ,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,eAA1C,CAAvB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,IAAvB;AACA,UAAMH,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX,WAAR;AAAqBY,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAd;AACA,GALD,CAKE,OAAOI,KAAP,EAAc;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACA;AACD,CATM","sourcesContent":["import {\n\tSEND_BILL,\n\tUPDATE_BILL,\n\tGET_BILL\n} from '../constants/constant';\nimport setAuthorizationToken from '../utils/validations/setAuthorizationToken';\nimport * as api from '../api/index';\n\nexport const getBills = (userId) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside getBills', userId);\n\t\tconst { data } = await api.fetchBill(userId);\n\t\tconsole.log('getBills', data);\n\t\tawait dispatch({ type: GET_BILL, payload: data });\n\t} catch (error) {\n\t\tconsole.log(error.message);\n\t}\n};\n\nexport const sendToBill = (billInfo) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside sendBill', billInfo);\n\t\tconst { data } = await api.sendBill(billInfo);\n\t\tconsole.log('sendBill', data);\n\t\tawait dispatch({ type: SEND_BILL, payload: data });\n\t\talert(\"Place a new order successfully\")\n\t} catch (error) {\n\t\tconsole.log(error.message);\n\t}\n};\n\nexport const updateToBill = (billInfo) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside updateToBill', billInfo);\n\t\tconst { data, status } = await api.updateBill(billInfo);\n\t\tconsole.log('updateToBill', data);\n\t\tawait dispatch({ type: UPDATE_BILL, payload: data });\n\t} catch (error) {\n\t\tconsole.log(error.message);\n\t}\n};\n\nexport const payBill = (billId, paidType, paidAmount, transaction_fee) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside payBill', billId, paidType, paidAmount, transaction_fee);\n\t\tconst { data } = await api.payBill(billId, paidType, paidAmount, transaction_fee);\n\t\tconsole.log('payBill', data);\n\t\tawait dispatch({ type: UPDATE_BILL, payload: data });\n\t} catch (error) {\n\t\tconsole.log(error.message);\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}