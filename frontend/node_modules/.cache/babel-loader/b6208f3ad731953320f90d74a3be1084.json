{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/components/Bill.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, ListGroup, ListGroupItem, Form, Button, Row, Col } from 'react-bootstrap';\nimport { Application } from './export';\nimport { faTimes, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendToMessage } from '../actions/authActions';\nimport { sendToBill } from '../actions/billAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bill = props => {\n  _s();\n\n  const allUser = useSelector(state => state.auth ? state.auth.allUser : null);\n  const [show, setShow] = useState(false);\n  const [editDisplay, setEditDisplay] = useState(\"none\");\n  const [payDisplay, setPayDisplay] = useState(\"none\");\n  const [message, setMessage] = useState();\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch(); // const userEmail = \"123@gmail.com\";\n\n  console.log(\"props.value\", props.value);\n  const [billInfo, setBillInfo] = useState({\n    user: props.value ? props.value : null,\n    currency: \"EUR\",\n    description: \"\",\n    amount: \"\",\n    date: new Date(Date.now() + 1000 * 60 * 60 * 24 * 10)\n  });\n  const currencies = [\"EUR\", \"GBP\", \"INR\", \"RMB\", \"Bitcoin\"];\n  let currencyOption = currencies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  });\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    setBillInfo({ ...billInfo,\n      currency: value\n    });\n  };\n\n  const onSubmit = async () => {\n    console.log(\"on submit bill\", billInfo);\n    await dispatch(sendToBill(billInfo));\n  };\n\n  const toggleEditDisplay = () => {\n    if (editDisplay === \"none\") {\n      setEditDisplay(\"display\");\n    } else {\n      setEditDisplay(\"none\");\n    }\n  }; // const send = async () => {\n  //     const currentUser = allUser.filter((a) => a.nickname === props.value)\n  //     console.log(\"currentUser\",currentUser[0]);\n  //     console.log(\"send message to user\", message, props.value);\n  //     const messageInfo = {sendTo: currentUser[0].username, message}\n  //     console.log(\"messageInfo\", messageInfo);\n  //     // await dispatch(sendToMessage(messageInfo))\n  // }\n\n\n  var dd = billInfo.date.getDate();\n  var mm = billInfo.date.getMonth() + 1; // 0 is January, so we must add 1\n\n  var yyyy = billInfo.date.getFullYear();\n  var dateString = dd + \"/\" + mm + \"/\" + yyyy;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"Send To: \", props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicDescription\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: billInfo.description,\n        onChange: e => setBillInfo({ ...billInfo,\n          description: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: \"Default Currency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"currency\",\n        id: \"currency\",\n        value: billInfo.currency,\n        className: \"form-control\",\n        onChange: handleChange,\n        children: currencyOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: billInfo.amount,\n        onChange: e => setBillInfo({ ...billInfo,\n          amount: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Due Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: dateString,\n        onChange: e => setBillInfo({ ...billInfo,\n          date: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: onSubmit,\n        style: {\n          width: \"100%\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Bill, \"j5LNIOVqlZtdwYTQVkQxnubWnbs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Bill;\nexport default Bill;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bill\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/components/Bill.js"],"names":["React","useState","Card","ListGroup","ListGroupItem","Form","Button","Row","Col","Application","faTimes","faSearch","FontAwesomeIcon","useDispatch","useSelector","sendToMessage","sendToBill","Bill","props","allUser","state","auth","show","setShow","editDisplay","setEditDisplay","payDisplay","setPayDisplay","message","setMessage","handleClose","handleShow","dispatch","console","log","value","billInfo","setBillInfo","user","currency","description","amount","date","Date","now","currencies","currencyOption","map","item","index","handleChange","event","target","type","checked","onSubmit","toggleEditDisplay","dd","getDate","mm","getMonth","yyyy","getFullYear","dateString","e","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Card, ListGroup, ListGroupItem, Form, Button, Row, Col } from 'react-bootstrap';\nimport { Application } from './export';\nimport { faTimes, faSearch} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendToMessage } from '../actions/authActions';\nimport { sendToBill } from '../actions/billAction';\n\nconst Bill = (props) => {\n    const allUser = useSelector((state) => state.auth ? state.auth.allUser : null)\n\n    const [show, setShow] = useState(false);\n    const [editDisplay, setEditDisplay] = useState(\"none\");\n    const [payDisplay, setPayDisplay] = useState(\"none\");\n    const [message, setMessage] = useState()\n    \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const dispatch = useDispatch()\n    // const userEmail = \"123@gmail.com\";\n    console.log(\"props.value\", props.value);\n    const [billInfo, setBillInfo] = useState({\n        user: props.value ? props.value : null,\n        currency: \"EUR\",\n        description: \"\",\n        amount: \"\",\n        date: new Date(Date.now() + 1000 * 60 * 60 * 24 * 10)\n    })\n\n    const currencies = [\"EUR\", \"GBP\", \"INR\", \"RMB\", \"Bitcoin\"]\n    let currencyOption = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const handleChange = event => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        setBillInfo({...billInfo, currency: value})\n    }\n\n    const onSubmit = async () => {\n        console.log(\"on submit bill\", billInfo);\n        await dispatch(sendToBill(billInfo))\n    }\n\n    const toggleEditDisplay = () => {\n        if(editDisplay === \"none\"){\n            setEditDisplay(\"display\")\n        }else{\n            setEditDisplay(\"none\")\n        }\n    }\n\n    // const send = async () => {\n    //     const currentUser = allUser.filter((a) => a.nickname === props.value)\n    //     console.log(\"currentUser\",currentUser[0]);\n    //     console.log(\"send message to user\", message, props.value);\n    //     const messageInfo = {sendTo: currentUser[0].username, message}\n    //     console.log(\"messageInfo\", messageInfo);\n    //     // await dispatch(sendToMessage(messageInfo))\n    // }\n\n    var dd = billInfo.date.getDate();\n    var mm = billInfo.date.getMonth() + 1; // 0 is January, so we must add 1\n    var yyyy = billInfo.date.getFullYear();\n\n    var dateString = dd + \"/\" + mm + \"/\" + yyyy;\n    \n    return (\n        <>\n            <h6>Send To: {props.value}</h6>\n                <Form.Group controlId=\"formBasicDescription\">\n                    <Form.Label>Description: </Form.Label>\n                    <Form.Control value={billInfo.description} onChange={(e) => setBillInfo({ ...billInfo, description: e.target.value })} type=\"text\" placeholder=\"\" />\n                </Form.Group>\n            <div className=\"form-group\">\n                <label htmlFor=\"currency\">Default Currency</label>\n                <select\n                    name=\"currency\"\n                    id=\"currency\"\n                    value={billInfo.currency}\n                    className=\"form-control\"\n                    onChange={handleChange}>\n                    {currencyOption}\n                </select>\n            </div>\n            <Form.Group controlId=\"formBasicDate\">\n                <Form.Label>Amount: </Form.Label>\n                <Form.Control value={billInfo.amount} onChange={(e) => setBillInfo({ ...billInfo, amount: e.target.value })}type=\"text\" placeholder=\"\" />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicDate\">\n                <Form.Label>Due Date: </Form.Label>\n                <Form.Control value={dateString} onChange={(e) => setBillInfo({ ...billInfo, date: e.target.value })}type=\"text\" placeholder=\"\" />\n            </Form.Group>\n                {/* <Card.Link href=\"#\">Send</Card.Link> */}\n            <Row>\n                <Button variant=\"primary\" onClick={onSubmit} style={{width: \"100%\"}}>\n                    Send\n                </Button>\n                {/* <Col>\n                    <Button variant=\"secondary\" onClick={toggleEditDisplay} style={{width: \"100%\"}}>\n                        Message\n                    </Button>\n                </Col> */}\n            </Row>\n            {/* <Application.Base display = {editDisplay}>\n                <Application.Close toggleDisplay={toggleEditDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n                <h6>Message</h6>\n                <Application.TextArea value={message} onChange={(e) => setMessage(e.target.value)}/>\n                <Button variant=\"secondary\" onClick={send} style={{width: \"100%\"}}>\n                        Send Message\n                </Button>\n            </Application.Base> */}\n        </>\n    );\n}\n\nexport default Bill"]},"metadata":{},"sourceType":"module"}