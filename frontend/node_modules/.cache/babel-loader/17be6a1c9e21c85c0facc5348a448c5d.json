{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Col, Row, Table } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Application from '../components/application/applicaiton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport logo from '../images/signup.png';\nimport { update, updateBalance } from '../actions/authActions';\nimport { getUsers } from '../actions/authActions';\nimport { USD_RMB, USD_EUR, USD_GBP, USD_INR, BIT_USD } from '../constants/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const user = useSelector(state => state.auth ? state.auth.user : null);\n  const allBalance = useSelector(state => state.auth ? state.auth.balance : null);\n  const [balance, setBalance] = useState(); // const [userInfo, setUserInfo] = useState({\n  //     username: '',\n  //     email: '',\n  //     phone: '',\n  //     picutre: '',\n  //     currency: 'USD',\n  //     time: \"(GMT-08:00) Pacific Time (US & Canada)\",\n  //     language: 'English'\n  // });\n\n  useEffect(() => {\n    if (allBalance) setBalance(allBalance);\n  }, [allBalance]);\n  const dispatch = useDispatch();\n  const [balanceInfo, setBalanceInfo] = useState({\n    username: user.username,\n    currency: user.bank ? user.bank.currency.toUpperCase() : \"NONE\",\n    operation: \"deposite\",\n    amount: \"\",\n    bitcoinNum: \"\"\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log(\"balanceInfo\", balanceInfo);\n    console.log(\"submit bank\"); // const addBank = {bank: bankInfo, address: addressInfo}\n    // dispatch(addBank(bankInfo))\n  };\n\n  const currencies = [\"EUR\", \"USD\", \"GBP\", \"INR\", \"RMB\"];\n  let currencyOption = currencies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  });\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    setBalanceInfo({ ...balanceInfo,\n      currency: value\n    });\n  };\n\n  const withdraw = async () => {\n    setBalanceInfo({ ...balanceInfo,\n      operation: \"withdraw\"\n    });\n    console.log(\"withdraw\", balanceInfo);\n    await dispatch(updateBalance(balanceInfo));\n    setBalanceInfo({ ...balanceInfo,\n      operation: \"\",\n      amount: \"\",\n      bitcoinNum: \"\"\n    });\n  };\n\n  const depostie = async () => {\n    setBalanceInfo({ ...balanceInfo,\n      operation: \"depostie\"\n    });\n    console.log(\"depostie\", balanceInfo);\n    await dispatch(updateBalance(balanceInfo));\n    setBalanceInfo({ ...balanceInfo,\n      operation: \"\",\n      amount: \"\",\n      bitcoinNum: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"60%\",\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Default Currency: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: user.bank ? user.bank.currency : \"NONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"currency\",\n                children: \"Currency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"currency\",\n                id: \"currency\",\n                value: balanceInfo.currency,\n                className: \"form-control\",\n                onChange: handleChange,\n                children: currencyOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formAmount\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: balanceInfo.amount,\n                onChange: e => setBalanceInfo({ ...balanceInfo,\n                  amount: e.target.value\n                }),\n                type: \"number\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: withdraw,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: depostie,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Deposite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"BitCoin Balance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: balance && balance.btc ? balance.btc : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBitcoin\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"BitCoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: balanceInfo.bitcoinNum,\n            onChange: e => setBalanceInfo({ ...balanceInfo,\n              bitcoinNum: e.target.value\n            }),\n            type: \"number\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: withdraw,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: depostie,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Deposite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Bank Account Balance In Different Currency Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Currency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: balance && balance.usd ? balance.usd : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"CNY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: balance && balance.cny ? balance.cny : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"INR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: balance && balance.inr ? balance.inr : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"EUR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: balance && balance.eur ? balance.eur : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"GBP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: balance && balance.gbp ? balance.gbp : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"BitCoin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: balance && balance.btc ? balance.btc : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"IdKJra5S79OKc5nO0DcF2UhOcO0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Profile.js"],"names":["React","useEffect","useState","Button","Form","Col","Row","Table","faPen","faTimes","FontAwesomeIcon","Application","useDispatch","useSelector","FileBase","logo","update","updateBalance","getUsers","USD_RMB","USD_EUR","USD_GBP","USD_INR","BIT_USD","Profile","user","state","auth","allBalance","balance","setBalance","dispatch","balanceInfo","setBalanceInfo","username","currency","bank","toUpperCase","operation","amount","bitcoinNum","onSubmit","e","preventDefault","console","log","currencies","currencyOption","map","item","index","handleChange","event","target","value","type","checked","withdraw","depostie","width","margin","marginLeft","btc","usd","cny","inr","eur","gbp"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Button, Form, Col, Row, Table } from 'react-bootstrap';\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Application from '../components/application/applicaiton'\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport logo from '../images/signup.png'\nimport {update, updateBalance} from '../actions/authActions'\nimport { getUsers } from '../actions/authActions'\nimport {USD_RMB, USD_EUR, USD_GBP, USD_INR, BIT_USD} from '../constants/constant'\n\nconst Profile = () => {\n    const user = useSelector((state) => state.auth ? state.auth.user : null)\n    const allBalance = useSelector((state) => state.auth ? state.auth.balance : null)\n    const [balance, setBalance] = useState()\n    // const [userInfo, setUserInfo] = useState({\n    //     username: '',\n    //     email: '',\n    //     phone: '',\n    //     picutre: '',\n    //     currency: 'USD',\n    //     time: \"(GMT-08:00) Pacific Time (US & Canada)\",\n    //     language: 'English'\n    // });\n    useEffect(() => {\n        if(allBalance)\n            setBalance(allBalance)\n    }, [allBalance])\n\n    const dispatch = useDispatch()\n\n    const [balanceInfo, setBalanceInfo] = useState({\n        username: user.username,\n        currency: user.bank? user.bank.currency.toUpperCase() : \"NONE\",\n        operation: \"deposite\",\n        amount: \"\",\n        bitcoinNum: \"\"\n    })\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"balanceInfo\", balanceInfo);\n        console.log(\"submit bank\");\n        // const addBank = {bank: bankInfo, address: addressInfo}\n        // dispatch(addBank(bankInfo))\n    }\n\n    const currencies = [\"EUR\", \"USD\", \"GBP\", \"INR\", \"RMB\"]\n    let currencyOption = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const handleChange = event => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        setBalanceInfo({...balanceInfo, currency: value})\n    }\n\n    const withdraw = async () => {\n        setBalanceInfo({...balanceInfo, operation: \"withdraw\"})\n        console.log(\"withdraw\", balanceInfo);\n        await dispatch(updateBalance(balanceInfo))\n        setBalanceInfo({...balanceInfo, operation: \"\", amount: \"\", bitcoinNum: \"\" })\n    }\n    \n    const depostie = async () => {\n        setBalanceInfo({...balanceInfo, operation: \"depostie\"})\n        console.log(\"depostie\", balanceInfo);\n        await dispatch(updateBalance(balanceInfo))\n        setBalanceInfo({...balanceInfo, operation: \"\", amount: \"\", bitcoinNum: \"\" })\n    }   \n\n    return (\n        <>\n        <div style={{width: \"60%\", margin: \"0 auto\"}}>\n            <Row className=\"justify-content-center\">\n                <h4>User Profile</h4>\n            </Row>\n            <h6>Default Currency: <strong>{user.bank? user.bank.currency : \"NONE\"}</strong></h6>\n            {/* <h6>Bank Account Balance: <strong>{balance ? balance.}</strong></h6> */}\n            \n            <div style={{width: \"50%\"}}>\n                <Row>\n                    <Col>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"currency\">Currency</label>\n                        <select\n                            name=\"currency\"\n                            id=\"currency\"\n                            value={balanceInfo.currency}\n                            className=\"form-control\"\n                            onChange={handleChange}>\n                            {currencyOption}\n                        </select>\n                    </div>\n                    </Col>\n                    <Col>\n                    <Form.Group controlId=\"formAmount\">\n                        <Form.Label>Amount</Form.Label>\n                        <Form.Control value={balanceInfo.amount} onChange={(e) => setBalanceInfo({ ...balanceInfo, amount: e.target.value })} type=\"number\"  required />\n                    </Form.Group>\n                    </Col>\n                </Row>\n                <Button variant=\"primary\" onClick={withdraw}>\n                    Withdraw\n                </Button>\n                <Button variant=\"danger\" onClick={depostie} style={{marginLeft: \"10px\"}}>\n                    Deposite\n                </Button>\n                <h6>BitCoin Balance: <strong>{balance && balance.btc ? balance.btc : 0}</strong></h6>\n                <Form.Group controlId=\"formBitcoin\">\n                    <Form.Label>BitCoin</Form.Label>\n                    <Form.Control value={balanceInfo.bitcoinNum} onChange={(e) => setBalanceInfo({ ...balanceInfo, bitcoinNum: e.target.value })} type=\"number\"  required />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={withdraw}>\n                    Withdraw\n                </Button>\n                <Button variant=\"danger\" onClick={depostie} style={{marginLeft: \"10px\"}}>\n                    Deposite\n                </Button>\n            </div>\n            <p></p>\n            <h6>Bank Account Balance In Different Currency Type:</h6>\n            <Row>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Currency</th>\n                        <th>Balance</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>USD</td>\n                            <td>{balance && balance.usd ? balance.usd : 0}</td>\n                        </tr>\n                        <tr>\n                            <td>CNY</td>\n                            <td>{balance && balance.cny ? balance.cny : 0}</td>\n                        </tr>\n                        <tr>\n                            <td>INR</td>\n                            <td>{balance && balance.inr ? balance.inr : 0}</td>\n                        </tr>\n                        <tr>\n                            <td>EUR</td>\n                            <td>{balance && balance.eur ? balance.eur : 0}</td>\n                        </tr>\n                        <tr>\n                            <td>GBP</td>\n                            <td>{balance && balance.gbp ? balance.gbp : 0}</td>\n                        </tr>\n                        <tr>\n                            <td>BitCoin</td>\n                            <td>{balance && balance.btc ? balance.btc : 0}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Row>\n        </div>\n        </>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}