{"ast":null,"code":"import { SEND_ORDER, UPDATE_ORDER, GET_ORDERS, DELETE_ORDER, ALL_ORDERS } from '../constants/constant';\nimport setAuthorizationToken from '../utils/validations/setAuthorizationToken';\nimport * as api from '../api/index';\nexport const send = orderInfo => async dispatch => {\n  try {\n    console.log('inside send', orderInfo);\n    const {\n      data\n    } = await api.sendOrder(orderInfo);\n    console.log('send', data);\n    await dispatch({\n      type: SEND_ORDER,\n      payload: data\n    });\n    alert(\"Place a new order successfully\");\n  } catch (error) {\n    alert(error.response.data);\n    console.log(\"error\", error.response.data);\n  }\n};\nexport const sendLimit = orderInfo => async dispatch => {\n  try {\n    console.log('inside send', orderInfo);\n    const {\n      data\n    } = await api.sendLimitOrder(orderInfo);\n    console.log('send', data);\n    await dispatch({\n      type: SEND_ORDER,\n      payload: data\n    });\n    alert(\"Place a new order successfully\");\n  } catch (error) {\n    alert(error.response.data);\n    console.log(error.message);\n  }\n};\nexport const updateToOrder = orderInfo => async dispatch => {\n  try {\n    console.log('inside updateToOrder', orderInfo);\n    console.log(\"orderInfo\", orderInfo);\n    const {\n      data\n    } = await api.updateOrder(orderInfo);\n    console.log('updateToOrder', data);\n    await dispatch({\n      type: UPDATE_ORDER,\n      payload: data\n    });\n  } catch (error) {\n    alert(error.response.data);\n    console.log(error.message);\n  }\n};\nexport const getFromOrders = username => async dispatch => {\n  try {\n    console.log('inside getFromOrders', username);\n    const {\n      data\n    } = await api.getOrders(username);\n    console.log('getFromOrders', data);\n    await dispatch({\n      type: GET_ORDERS,\n      payload: data\n    });\n  } catch (error) {\n    alert(error.response.data);\n    console.log(error.message);\n  }\n};\nexport const deleteFromOrders = orderId => async dispatch => {\n  try {\n    console.log('inside deleteFromOrders', orderId);\n    const {\n      data\n    } = await api.deleteOrder(orderId);\n    console.log('deleteFromOrders', data);\n    await dispatch({\n      type: DELETE_ORDER,\n      payload: data\n    });\n  } catch (error) {\n    alert(error.response.data);\n    console.log(error.message);\n  }\n};\nexport const allFromOrders = () => async dispatch => {\n  try {\n    console.log('inside allFromOrders');\n    const {\n      data\n    } = await api.getAllOrders();\n    console.log('allFromOrders', data);\n    await dispatch({\n      type: ALL_ORDERS,\n      payload: data\n    });\n  } catch (error) {\n    alert(error.response.data);\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/actions/orderActions.js"],"names":["SEND_ORDER","UPDATE_ORDER","GET_ORDERS","DELETE_ORDER","ALL_ORDERS","setAuthorizationToken","api","send","orderInfo","dispatch","console","log","data","sendOrder","type","payload","alert","error","response","sendLimit","sendLimitOrder","message","updateToOrder","updateOrder","getFromOrders","username","getOrders","deleteFromOrders","orderId","deleteOrder","allFromOrders","getAllOrders"],"mappings":"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","sourcesContent":["import {\n\tSEND_ORDER,\n    UPDATE_ORDER,\n\tGET_ORDERS,\n\tDELETE_ORDER,\n\tALL_ORDERS,\n} from '../constants/constant';\nimport setAuthorizationToken from '../utils/validations/setAuthorizationToken';\nimport * as api from '../api/index';\n\nexport const send = (orderInfo) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside send', orderInfo);\n\t\tconst { data } = await api.sendOrder(orderInfo);\n\t\tconsole.log('send', data);\n\t\tawait dispatch({ type: SEND_ORDER, payload: data });\n\t\talert(\"Place a new order successfully\")\n\t} catch (error) {\n\t\talert(error.response.data);\n\t\tconsole.log(\"error\", error.response.data);\n\t}\n};\n\nexport const sendLimit = (orderInfo) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside send', orderInfo);\n\t\tconst { data } = await api.sendLimitOrder(orderInfo);\n\t\tconsole.log('send', data);\n\t\tawait dispatch({ type: SEND_ORDER, payload: data });\n\t\talert(\"Place a new order successfully\")\n\t} catch (error) {\n\t\talert(error.response.data);\n\t\tconsole.log(error.message);\n\t}\n};\n\n\nexport const updateToOrder = (orderInfo) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside updateToOrder', orderInfo);\n\t\tconsole.log(\"orderInfo\",orderInfo);\n\t\tconst { data } = await api.updateOrder(orderInfo);\n\t\tconsole.log('updateToOrder', data);\n\t\tawait dispatch({ type: UPDATE_ORDER, payload: data });\n\t} catch (error) {\n\t\talert(error.response.data);\n\t\tconsole.log(error.message);\n\t}\n};\n\nexport const getFromOrders = (username) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside getFromOrders', username);\n\t\tconst { data } = await api.getOrders(username);\n\t\tconsole.log('getFromOrders', data);\n\t\tawait dispatch({ type: GET_ORDERS, payload: data });\n\t} catch (error) {\n\t\talert(error.response.data);\n\t\tconsole.log(error.message);\n\t}\n};\n\nexport const deleteFromOrders = (orderId) => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside deleteFromOrders', orderId);\n\t\tconst { data } = await api.deleteOrder(orderId);\n\t\tconsole.log('deleteFromOrders', data);\n\t\tawait dispatch({ type: DELETE_ORDER, payload: data });\n\t} catch (error) {\n\t\talert(error.response.data);\n\t\tconsole.log(error.message);\n\t}\n};\n\nexport const allFromOrders = () => async (dispatch) => {\n\ttry {\n\t\tconsole.log('inside allFromOrders', );\n\t\tconst { data } = await api.getAllOrders();\n\t\tconsole.log('allFromOrders', data);\n\t\tawait dispatch({ type: ALL_ORDERS, payload: data });\n\t} catch (error) {\n\t\talert(error.response.data);\n\t\tconsole.log(error.message);\n\t}\n};\n\n"]},"metadata":{},"sourceType":"module"}