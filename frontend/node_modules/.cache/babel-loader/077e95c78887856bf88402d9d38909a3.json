{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Bills.js\",\n    _s = $RefreshSig$();\n\nimport Reactm, { useState, useEffect } from 'react';\nimport { Jumbotron, Button, Row, Col, Form, Table, Card, InputGroup, FormControl, ListGroup, Modal } from 'react-bootstrap';\nimport { faTimes, faSearch, faUserFriends } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Application } from '../components/export';\nimport Bill from '../components/Bill';\nimport { updateToBill } from '../actions/billAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bills = () => {\n  _s();\n\n  const allUser = useSelector(state => state.auth ? state.auth.allUser : null);\n  const user = useSelector(state => state.auth ? state.auth.user : null);\n  const [editDisplay, setEditDisplay] = useState(\"none\");\n  const [payDisplay, setPayDisplay] = useState(\"none\");\n  const [users, setUsers] = useState(\"none\");\n  const [search, setSearch] = useState(\"\");\n  const [searchOutput, setSearchOutput] = useState([]);\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState();\n  const [editBill, setEditBill] = useState({\n    status: \"\",\n    amount: \"\"\n  });\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (allUser) setUsers(allUser);\n  }, [allUser]);\n\n  const onSubmit = () => {\n    console.log(\"submit bill!\", editBill);\n  };\n\n  const toggleEditDisplay = input => {\n    if (editDisplay === \"none\") {\n      setEditBill(input);\n      setEditDisplay(\"display\");\n    } else {\n      setEditDisplay(\"none\");\n    }\n  };\n\n  const togglePayDisplay = () => {\n    if (payDisplay === \"none\") {\n      setPayDisplay(\"display\");\n    } else {\n      setPayDisplay(\"none\");\n    }\n  };\n\n  const bills = [{\n    id: 1,\n    status: \"Cancelled\",\n    amount: 100\n  }, {\n    id: 2,\n    status: \"Paid\",\n    amount: 4321\n  }, {\n    id: 3,\n    status: \"Rejected\",\n    amount: 123\n  }, {\n    id: 4,\n    status: \"Waiting\",\n    amount: 342\n  }, {\n    id: 5,\n    status: \"Overdue\",\n    amount: 32\n  }]; // const allUser = [{id: 1, username: \"321@gmail.com\", nickname: \"chen\"},{id: 2, username: \"111@gmail.com\", nickname: \"lin\"},{id: 3, username: \"222@gmail.com\", nickname: \"liu\"},{id: 4, username: \"333@gmail.com\", nickname: \"zhang\"}]\n\n  const searchUser = name => {\n    console.log(\"search for\", name);\n    setSearch(name);\n    const afterUser = users.filter(a => a.username.includes(name) || a.nickname.includes(name));\n    let selectedUser = users.filter(a => a.username.includes(name));\n    selectedUser = selectedUser.filter(a => a.nickname !== user.nickname);\n    console.log(\"afterUser\", selectedUser);\n    setSearchOutput(selectedUser); // afterUser.map((item, index) => {\n    //     selectedUser.push (\n    //         <Card style={{ width: '18rem' }}>\n    //             <Card.Body>\n    //                 <Card.Title>Card Title</Card.Title>\n    //                 <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\n    //                 <Card.Text>\n    //                 Some quick example text to build on the card title and make up the bulk of\n    //                 the card's content.\n    //                 </Card.Text>\n    //                 <Card.Link href=\"#\">Card Link</Card.Link>\n    //                 <Card.Link href=\"#\">Another Link</Card.Link>\n    //             </Card.Body>\n    //         </Card>\n    //     )\n    // })\n  };\n\n  const statusList = ['Cancelled', 'Paid', 'Reject', 'Waiting', 'Overdue'];\n  let statusOption = statusList.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this);\n  });\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const targetname = target.name;\n    setEditBill({ ...editBill,\n      [targetname]: value\n    });\n  };\n\n  const detail = input => {\n    console.log(\"getting detail of user\", input);\n    setName(input);\n    setShow(true);\n  };\n\n  const reject = async id => {\n    console.log(\"edit\", editBill);\n    setEditBill({ ...editBill,\n      id,\n      status: \"Rejected\"\n    });\n    await dispatch(updateToBill(editBill));\n  };\n\n  const pay = async id => {\n    console.log(\"pay\");\n    setEditBill({ ...editBill,\n      id,\n      status: \"Paid\"\n    });\n    await dispatch(updateToBill(editBill));\n  };\n\n  const edit = async () => {\n    console.log(\"edit\", editBill);\n    await dispatch(updateToBill(editBill));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"60%\",\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"100px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicDescription\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Send Bill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"col-mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faSearch\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  placeholder: \"Search\",\n                  \"aria-label\": \"Search\",\n                  \"aria-describedby\": \"basic-addon2\",\n                  value: search,\n                  onChange: e => searchUser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                style: {\n                  zIndex: 10\n                },\n                children: [console.log(\"before search selectedUser\", search, searchOutput), search && searchOutput ? searchOutput.map((item, index) => {\n                  if (item.nickname) {\n                    return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      className: \"search-result\",\n                      action: true,\n                      onClick: () => detail(item.nickname),\n                      children: item.nickname ? item.nickname : item.username\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 29\n                    }, this);\n                  }\n                }) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Bills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Operation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bills.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this), item.status !== \"Cancelled\" && item.status !== \"Paid\" && item.status !== \"Rejected\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => toggleEditDisplay(item),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Cannot Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), item.status !== \"Paid\" && item.status !== \"Rejected\" && item.status !== \"Cancelled\" && item.status !== \"Overdue\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => reject(item.id),\n                    children: \"Reject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => pay(item.id),\n                    children: \"Pay\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"None Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Send Bills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Bill, {\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n        display: editDisplay,\n        children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n          toggleDisplay: toggleEditDisplay,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Edit Bill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this), console.log(\"editBill\", editBill), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"status\",\n            children: \"Bill Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"status\",\n            id: \"status\",\n            value: editBill.status,\n            className: \"form-control\",\n            onChange: handleChange,\n            children: statusOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicDate\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Bill Amount: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: editBill.amount,\n            onChange: e => setEditBill({ ...editBill,\n              amount: e.target.value\n            }),\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: edit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Application.Base, {\n        display: payDisplay,\n        children: [/*#__PURE__*/_jsxDEV(Application.Close, {\n          toggleDisplay: togglePayDisplay,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: payDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is pay page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Bills, \"lCGl9DTolwkGbJWMf/sda7YLxSs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Bills;\nexport default Bills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bills\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Bills.js"],"names":["Reactm","useState","useEffect","Jumbotron","Button","Row","Col","Form","Table","Card","InputGroup","FormControl","ListGroup","Modal","faTimes","faSearch","faUserFriends","FontAwesomeIcon","useDispatch","useSelector","Application","Bill","updateToBill","Bills","allUser","state","auth","user","editDisplay","setEditDisplay","payDisplay","setPayDisplay","users","setUsers","search","setSearch","searchOutput","setSearchOutput","show","setShow","name","setName","editBill","setEditBill","status","amount","handleClose","handleShow","dispatch","onSubmit","console","log","toggleEditDisplay","input","togglePayDisplay","bills","id","searchUser","afterUser","filter","a","username","includes","nickname","selectedUser","statusList","statusOption","map","item","index","handleChange","event","target","value","targetname","detail","reject","pay","edit","width","margin","height","e","zIndex"],"mappings":"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","sourcesContent":["import Reactm, {useState, useEffect} from 'react'\nimport { Jumbotron, Button, Row, Col, Form, Table, Card, InputGroup, FormControl, ListGroup, Modal } from 'react-bootstrap';\nimport { faTimes, faSearch, faUserFriends} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Application } from '../components/export';\nimport Bill from '../components/Bill';\nimport { updateToBill } from '../actions/billAction';\n\nconst Bills = () => {\n    const allUser = useSelector((state) => state.auth ? state.auth.allUser : null)\n    const user = useSelector((state) => state.auth ? state.auth.user : null)\n    const [editDisplay, setEditDisplay] = useState(\"none\");\n    const [payDisplay, setPayDisplay] = useState(\"none\");\n    const [users, setUsers] = useState(\"none\");\n    const [search, setSearch] = useState(\"\");\n    const [searchOutput, setSearchOutput] = useState([]);\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState();\n    const [editBill, setEditBill] = useState({\n        status: \"\",\n        amount: \"\"\n    });\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        if(allUser)\n            setUsers(allUser)\n    }, [allUser])\n\n    const onSubmit = () => {\n        console.log(\"submit bill!\", editBill);\n    }\n\n    \n    const toggleEditDisplay = (input) => {\n        if(editDisplay === \"none\"){\n            setEditBill(input)\n            setEditDisplay(\"display\")\n        }else{\n            setEditDisplay(\"none\")\n        }\n    }\n\n    const togglePayDisplay = () => {\n        if(payDisplay === \"none\"){\n            setPayDisplay(\"display\")\n        }else{\n            setPayDisplay(\"none\")\n        }\n    }\n\n    const bills = [{id: 1, status: \"Cancelled\", amount: 100}, {id: 2, status: \"Paid\", amount: 4321}, {id: 3, status: \"Rejected\", amount: 123}, {id: 4, status: \"Waiting\", amount: 342}, {id: 5, status: \"Overdue\", amount: 32}]\n\n    // const allUser = [{id: 1, username: \"321@gmail.com\", nickname: \"chen\"},{id: 2, username: \"111@gmail.com\", nickname: \"lin\"},{id: 3, username: \"222@gmail.com\", nickname: \"liu\"},{id: 4, username: \"333@gmail.com\", nickname: \"zhang\"}]\n\n    const searchUser = (name) => {\n        console.log(\"search for\", name);\n        setSearch(name)\n        const afterUser = users.filter((a) => a.username.includes(name) || a.nickname.includes(name))\n        let selectedUser = users.filter((a) => a.username.includes(name))\n        selectedUser = selectedUser.filter((a) => a.nickname !== user.nickname)\n\n        console.log(\"afterUser\", selectedUser);\n        setSearchOutput(selectedUser)\n        // afterUser.map((item, index) => {\n        //     selectedUser.push (\n        //         <Card style={{ width: '18rem' }}>\n        //             <Card.Body>\n        //                 <Card.Title>Card Title</Card.Title>\n        //                 <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\n        //                 <Card.Text>\n        //                 Some quick example text to build on the card title and make up the bulk of\n        //                 the card's content.\n        //                 </Card.Text>\n        //                 <Card.Link href=\"#\">Card Link</Card.Link>\n        //                 <Card.Link href=\"#\">Another Link</Card.Link>\n        //             </Card.Body>\n        //         </Card>\n        //     )\n        // })\n        \n    }\n\n    const statusList = ['Cancelled', 'Paid', 'Reject', 'Waiting', 'Overdue']\n    let statusOption = statusList.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const handleChange = event => {\n        const target = event.target;\n        const value = target.value;\n        const targetname = target.name\n        setEditBill({...editBill, [targetname]: value})\n    }\n\n    const detail = (input) => {\n        console.log(\"getting detail of user\", input);\n        setName(input)\n        setShow(true)\n    }\n\n    const reject = async (id) => {\n        console.log(\"edit\", editBill);\n        setEditBill({...editBill, id, status: \"Rejected\"})\n        await dispatch(updateToBill(editBill))\n    }\n\n    const pay = async (id) => {\n        console.log(\"pay\");\n        setEditBill({...editBill, id, status: \"Paid\"})  \n        await dispatch(updateToBill(editBill))\n    }\n\n    const edit = async () => {\n        console.log(\"edit\", editBill);\n        await dispatch(updateToBill(editBill))\n    }\n\n    return (\n        <>\n        <div style={{width: \"60%\", margin: \"0 auto\"}}>\n            <div style={{height: \"100px\"}}>\n                <Form.Group controlId=\"formBasicDescription\">\n                <Form.Label>Send Bill</Form.Label>\n                <Row>\n                <Col>\n                <InputGroup className=\"col-mb-3\">\n                    <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FontAwesomeIcon icon={faSearch} />\n                    </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                    placeholder=\"Search\"\n                    aria-label=\"Search\"\n                    aria-describedby=\"basic-addon2\"\n                    value={search}\n                    onChange={(e) => searchUser(e.target.value)}\n                    />\n                </InputGroup>\n                <ListGroup style={{zIndex: 10}}>\n                    {console.log(\"before search selectedUser\", search, searchOutput)}\n                    {search && searchOutput\n                    ? searchOutput.map((item, index) => {\n                        if (item.nickname) {\n                            return (\n                            <ListGroup.Item\n                                className=\"search-result\"\n                                action\n                                onClick={() => detail(item.nickname)}\n                                key={index}\n                            >\n                                {item.nickname ? item.nickname : item.username}\n                            </ListGroup.Item>\n                            );\n                        }\n                        })\n                    : null}\n                </ListGroup>\n                </Col>\n            </Row>\n            </Form.Group>\n            </div>\n            <Row className=\"justify-content-center\">\n                <h4>Bills</h4>\n            </Row>\n            <Row>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th>Status</th>\n                        <th>Amount</th>\n                        <th>Edit</th>\n                        <th>Operation</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {bills.map((item, index) => {\n                            return <tr>\n                                    <td>{item.id}</td>\n                                    <td>{item.status}</td>\n                                    <td>{item.amount}</td>\n                                    {item.status !== \"Cancelled\" && item.status !== \"Paid\" && item.status !== \"Rejected\" ? \n                                    <td>\n                                        <Button variant=\"link\" onClick={() => toggleEditDisplay(item)}>Edit</Button>\n                                    </td> : \n                                    <td> \n                                        Cannot Edit\n                                    </td>\n                                    }\n                                    {item.status !== \"Paid\" && item.status !== \"Rejected\" && item.status !==\"Cancelled\" && item.status !== \"Overdue\" ? \n                                    <td>\n                                        <Button variant=\"link\" onClick={() => reject(item.id)}>Reject</Button>\n                                        <Button variant=\"link\" onClick={() => pay(item.id)}>Pay</Button>\n                                    </td> : \n                                    <td> \n                                        None Action\n                                    </td>\n                                    }\n                                </tr>\n                        })}\n                    </tbody>\n                </Table>\n            </Row>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Send Bills</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Bill value={name}/>\n                </Modal.Body>\n        </Modal>\n        <Application.Base display = {editDisplay}>\n                <Application.Close toggleDisplay={toggleEditDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n                <h6>Edit Bill</h6>\n                {console.log(\"editBill\",editBill)}\n                    <div className=\"form-group\">\n                    <label htmlFor=\"status\">Bill Status</label>\n                        <select\n                            name=\"status\"\n                            id=\"status\"\n                            value={editBill.status}\n                            className=\"form-control\"\n                            onChange={handleChange}>\n                            {statusOption}\n                        </select>\n                    </div>\n                    <Form.Group controlId=\"formBasicDate\">\n                        <Form.Label>Bill Amount: </Form.Label>\n                        <Form.Control value={editBill.amount} onChange={(e) => setEditBill({ ...editBill, amount: e.target.value })}type=\"text\" placeholder=\"\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={edit}>Edit</Button>\n            </Application.Base>\n            <Application.Base display = {payDisplay}>\n                <Application.Close toggleDisplay={togglePayDisplay}><FontAwesomeIcon icon={faTimes} /></Application.Close>\n                <h6>{payDisplay}</h6>\n                <p>This is pay page</p>\n            </Application.Base>\n        </div>\n        </>\n    )\n}\n\nexport default Bills\n"]},"metadata":{},"sourceType":"module"}