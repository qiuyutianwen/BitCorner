{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Buy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Button, Row, Col, Form, Card, Modal } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport img from '../images/home.png';\nimport { Application } from '../components/export';\nimport Listing from '../components/Listing';\nimport Order from \"../components/Order\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Buy = () => {\n  _s();\n\n  const allOrder = useSelector(state => state.order ? state.order.allOrder : null);\n  const [display, setDisplay] = useState(\"none\");\n  const [contact, setContact] = useState();\n  const [message, setMessage] = useState('');\n  const [orders, setOrders] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    if (allOrder) setOrders(allOrder);\n  }, [allOrder]);\n\n  const toggleDisplay = () => {\n    if (display === \"none\") {\n      setDisplay(\"display\");\n    } else {\n      setDisplay(\"none\");\n    }\n  };\n\n  const choice = async value => {\n    setContact(value);\n\n    if (display === \"none\") {\n      setDisplay(\"display\");\n    } else {\n      setDisplay(\"none\");\n    }\n  };\n\n  let lists = allOrder.filter(l => l.type === \"BUY\" && l.status === \"Open\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Order, {\n      type: \"BUY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Pricing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        children: \"Quickly build an effective pricing table for your potential customers with this Bootstrap example. It\\u2019s built with default Bootstrap components and utilities with little customization.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: lists.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Listing, {\n            value: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Buy, \"cpGu/+yHmBGCRL/tJ8fu7Hqp7es=\", false, function () {\n  return [useSelector];\n});\n\n_c = Buy;\nexport default Buy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Buy.js"],"names":["React","useState","useEffect","Jumbotron","Button","Row","Col","Form","Card","Modal","faApple","faAndroid","FontAwesomeIcon","faTimes","img","Application","Listing","Order","useSelector","Buy","allOrder","state","order","display","setDisplay","contact","setContact","message","setMessage","orders","setOrders","show","setShow","handleClose","handleShow","toggleDisplay","choice","value","lists","filter","l","type","status","margin","textAlign","map","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Jumbotron, Button, Row, Col, Form, Card, Modal } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport img from '../images/home.png'\nimport { Application } from '../components/export';\nimport Listing from '../components/Listing';\nimport Order from \"../components/Order\"\nimport { useSelector } from 'react-redux';\nconst Buy = () => {\n    const allOrder = useSelector((state) => state.order ? state.order.allOrder : null)\n\n    const [display, setDisplay] = useState(\"none\");\n    const [contact, setContact] = useState();\n    const [message, setMessage] = useState('');\n    const [orders, setOrders] = useState('');\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if(allOrder)\n            setOrders(allOrder)\n    }, [allOrder])\n    \n    const toggleDisplay = () => {\n        if(display === \"none\"){\n            setDisplay(\"display\")\n        }else{\n            setDisplay(\"none\")\n        }\n    }\n\n    const choice = async (value) => {\n        setContact(value);\n        if(display === \"none\"){\n            setDisplay(\"display\")\n        }else{\n            setDisplay(\"none\")\n        }\n    }\n    \n    let lists = allOrder.filter((l) => l.type === \"BUY\" && l.status === \"Open\")\n    return (\n        <>\n        <Order type=\"BUY\" />\n        <div style={{margin: \"0 auto\"}}>\n            <h3 style={{textAlign: \"center\"}}>Pricing</h3>\n            <Form.Text>Quickly build an effective pricing table for your potential customers with this Bootstrap example. Itâ€™s built with default Bootstrap components and utilities with little customization.</Form.Text>\n            <Row>\n                {lists.map((item, index) => {\n                    return (\n                        <Listing key={index} value={item}/>\n                    )\n                })}\n            </Row>\n        </div>\n        </>\n    )\n}\n\nexport default Buy"]},"metadata":{},"sourceType":"module"}