{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Cancelled.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Button, Row, Col, Form, Card, Modal, Table } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport img from '../images/home.png';\nimport { Application } from '../components/export';\nimport Listing from '../components/Listing';\nimport Order from \"../components/Order\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cancelled = () => {\n  _s();\n\n  const allOrder = useSelector(state => state.order ? state.order.allOrder : null);\n  const [display, setDisplay] = useState(\"none\");\n  const [contact, setContact] = useState();\n  const [message, setMessage] = useState('');\n  const [orders, setOrders] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    if (allOrder) setOrders(allOrder);\n  }, [allOrder]);\n\n  const toggleDisplay = () => {\n    if (display === \"none\") {\n      setDisplay(\"display\");\n    } else {\n      setDisplay(\"none\");\n    }\n  };\n\n  const choice = async value => {\n    setContact(value);\n\n    if (display === \"none\") {\n      setDisplay(\"display\");\n    } else {\n      setDisplay(\"none\");\n    }\n  };\n\n  let lists = allOrder.filter(l => l.status !== \"Open\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bitcoin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: lists.map(l => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: l.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: l.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: l.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: l.btc_quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  style: {\n                    padding: \"0px\"\n                  },\n                  children: \"Reopen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cancelled, \"cpGu/+yHmBGCRL/tJ8fu7Hqp7es=\", false, function () {\n  return [useSelector];\n});\n\n_c = Cancelled;\nexport default Cancelled;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cancelled\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Cancelled.js"],"names":["React","useState","useEffect","Jumbotron","Button","Row","Col","Form","Card","Modal","Table","faApple","faAndroid","FontAwesomeIcon","faTimes","img","Application","Listing","Order","useSelector","Cancelled","allOrder","state","order","display","setDisplay","contact","setContact","message","setMessage","orders","setOrders","show","setShow","handleClose","handleShow","toggleDisplay","choice","value","lists","filter","l","status","margin","map","id","type","price","btc_quantity","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4CC,IAA5C,EAAkDC,KAAlD,EAAyDC,KAAzD,QAAsE,iBAAtE;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oCAAnC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAuB,mCAAvB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYF,QAA1B,GAAqC,IAAjD,CAA5B;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,EAAtC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAAC+B,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMiC,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGmB,QAAH,EACIU,SAAS,CAACV,QAAD,CAAT;AACP,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;;AAKA,QAAMe,aAAa,GAAG,MAAM;AACxB,QAAGZ,OAAO,KAAK,MAAf,EAAsB;AAClBC,MAAAA,UAAU,CAAC,SAAD,CAAV;AACH,KAFD,MAEK;AACDA,MAAAA,UAAU,CAAC,MAAD,CAAV;AACH;AACJ,GAND;;AAQA,QAAMY,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5BX,IAAAA,UAAU,CAACW,KAAD,CAAV;;AACA,QAAGd,OAAO,KAAK,MAAf,EAAsB;AAClBC,MAAAA,UAAU,CAAC,SAAD,CAAV;AACH,KAFD,MAEK;AACDA,MAAAA,UAAU,CAAC,MAAD,CAAV;AACH;AACJ,GAPD;;AASA,MAAIc,KAAK,GAAGlB,QAAQ,CAACmB,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAa,MAApC,CAAZ;AACA,sBACI;AAAA,2BAEA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAAA,gCACI;AAAA,iCACI;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,oBACKJ,KAAK,CAACK,GAAN,CAAWH,CAAD,IAAO;AACd,gCACI;AAAA,sCACI;AAAA,0BAAKA,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKJ,CAAC,CAACK;AAAP;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKL,CAAC,CAACM;AAAP;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKN,CAAC,CAACO;AAAP;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,uCAAI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,MAAhB;AAAuB,kBAAA,KAAK,EAAE;AAACC,oBAAAA,OAAO,EAAE;AAAV,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AASH,WAVA;AADL;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA,mBADJ;AA+BH,CAlED;;GAAM7B,S;UACeD,W;;;KADfC,S;AAoEN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Jumbotron, Button, Row, Col, Form, Card, Modal, Table } from 'react-bootstrap';\nimport { faApple, faAndroid } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport img from '../images/home.png'\nimport { Application } from '../components/export';\nimport Listing from '../components/Listing';\nimport Order from \"../components/Order\"\nimport { useSelector } from 'react-redux';\nconst Cancelled = () => {\n    const allOrder = useSelector((state) => state.order ? state.order.allOrder : null)\n\n    const [display, setDisplay] = useState(\"none\");\n    const [contact, setContact] = useState();\n    const [message, setMessage] = useState('');\n    const [orders, setOrders] = useState('');\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if(allOrder)\n            setOrders(allOrder)\n    }, [allOrder])\n    \n    const toggleDisplay = () => {\n        if(display === \"none\"){\n            setDisplay(\"display\")\n        }else{\n            setDisplay(\"none\")\n        }\n    }\n\n    const choice = async (value) => {\n        setContact(value);\n        if(display === \"none\"){\n            setDisplay(\"display\")\n        }else{\n            setDisplay(\"none\")\n        }\n    }\n    \n    let lists = allOrder.filter((l) => l.status !== \"Open\")\n    return (\n        <>\n        {/* <Order type=\"BUY\" /> */}\n        <div style={{margin: \"0 auto\"}}>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Type</th>\n                    <th>Price</th>\n                    <th>Bitcoin</th>\n                    <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {lists.map((l) => {\n                        return (\n                            <tr>\n                                <td>{l.id}</td>\n                                <td>{l.type}</td>\n                                <td>{l.price}</td>\n                                <td>{l.btc_quantity}</td>\n                                <td><Button variant=\"link\" style={{padding: \"0px\"}}>Reopen</Button></td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </div>\n        </>\n    )\n}\n\nexport default Cancelled\n\n"]},"metadata":{},"sourceType":"module"}