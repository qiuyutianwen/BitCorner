{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/components/Order.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navbar, Button, Modal, Form } from 'react-bootstrap';\nimport LoginPage from '../pages/userauth/LoginPage';\nimport LoginNav from '../pages/userauth/LoginNav';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { getFromOrders, send, sendLimit } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Order = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const user = useSelector(state => state.auth ? state.auth.user : null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [sellOrder, setSellOrder] = useState({\n    username: user ? user.username : null,\n    amount: \"\",\n    currency: \"EUR\",\n    orderType: props ? props.type : \"\",\n    price: \"\",\n    transactionType: \"\"\n  });\n  const currencies = [\"EUR\", \"USD\", \"GBP\", \"INR\", \"CNY\"];\n  let currencyOption = currencies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  });\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.transactionType === 'checkbox' ? target.checked : target.value;\n    setSellOrder({ ...sellOrder,\n      currency: value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log(\"submit sell order\", sellOrder);\n\n    if (sellOrder.transaction_type === \"Market Order\") {\n      setSellOrder({ ...sellOrder,\n        price: localStorage.getItem('price')\n      });\n      await dispatch(send(sellOrder, user._id));\n    } else await dispatch(sendLimit(sellOrder, user._id));\n\n    setShow(false);\n    await dispatch(getFromOrders(user.username));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.type !== \"BUY\" ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      style: {\n        margin: \"10px\"\n      },\n      children: \"Place a Sell Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      style: {\n        margin: \"10px\"\n      },\n      children: \"Place a Buy Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: props.type !== \"BUY\" ? /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Sell Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Buy Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 85\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmit,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Amount of BitCoin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: sellOrder.amount,\n              onChange: e => setSellOrder({ ...sellOrder,\n                amount: e.target.value\n              }),\n              type: \"number\",\n              placeholder: \"Enter amount\",\n              required: true,\n              min: \"0.00\",\n              step: \"0.00000001\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currency\",\n              children: \"Sell Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"currency\",\n              id: \"currency\",\n              value: sellOrder.currency,\n              className: \"form-control\",\n              onChange: handleChange,\n              children: currencyOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sell Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              name: \"group1\",\n              value: \"Market Order\",\n              onClick: e => setSellOrder({ ...sellOrder,\n                transactionType: e.target.value\n              }),\n              label: \"Market Order\",\n              type: \"radio\",\n              id: \"inline-radio-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              name: \"group1\",\n              value: \"Limit Order\",\n              onClick: e => setSellOrder({ ...sellOrder,\n                transactionType: e.target.value\n              }),\n              label: \"Limit Order\",\n              type: \"radio\",\n              id: \"inline-radio-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)]\n          }, \"inline-radio\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), sellOrder.transactionType === \"Limit Order\" ? /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Limit Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: sellOrder.price,\n              onChange: e => setSellOrder({ ...sellOrder,\n                price: e.target.value\n              }),\n              type: \"number\",\n              placeholder: \"Enter Limit Order\",\n              required: true,\n              presicion: 2,\n              min: \"0.00\",\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Order, \"GFXluBzS6/hQTlT0ZwZSLeuLT5Y=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/components/Order.js"],"names":["React","useState","Navbar","Button","Modal","Form","LoginPage","LoginNav","useDispatch","useSelector","Link","useHistory","getFromOrders","send","sendLimit","Order","props","show","setShow","handleClose","handleShow","user","state","auth","history","dispatch","sellOrder","setSellOrder","username","amount","currency","orderType","type","price","transactionType","currencies","currencyOption","map","item","index","handleChange","event","target","value","checked","onSubmit","e","preventDefault","console","log","transaction_type","localStorage","getItem","_id","margin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Navbar, Button, Modal, Form } from 'react-bootstrap';\nimport LoginPage from '../pages/userauth/LoginPage'\nimport LoginNav from '../pages/userauth/LoginNav'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {Link, useHistory} from 'react-router-dom'\nimport { getFromOrders, send, sendLimit } from '../actions/orderActions';\nconst Order = (props) => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const user = useSelector((state) => state.auth ? state.auth.user : null)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    \n    const [sellOrder, setSellOrder] = useState({\n        username: user ? user.username : null,\n        amount: \"\",\n        currency: \"EUR\",\n        orderType: props ? props.type : \"\",\n        price: \"\",\n        transactionType: \"\"\n    })\n\n    const currencies = [\"EUR\", \"USD\", \"GBP\", \"INR\", \"CNY\"]\n    let currencyOption = currencies.map((item, index) => {\n        return <option value={item} key={index}>{item}</option>\n    });\n\n    const handleChange = event => {\n        const target = event.target;\n        const value = target.transactionType === 'checkbox' ? target.checked : target.value;\n        setSellOrder({...sellOrder, currency: value})\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault()\n        console.log(\"submit sell order\", sellOrder);\n        if(sellOrder.transaction_type === \"Market Order\"){\n            setSellOrder({...sellOrder, price: localStorage.getItem('price')})\n            await dispatch(send(sellOrder, user._id))\n        }\n        else\n            await dispatch(sendLimit(sellOrder, user._id))\n        setShow(false)\n        await dispatch(getFromOrders(user.username))\n    }\n\n    return (\n        <>\n        {props.type !== \"BUY\" ? <Button variant=\"primary\" onClick={handleShow} style={{margin: \"10px\"}}>\n            Place a Sell Order\n        </Button> : <Button variant=\"primary\" onClick={handleShow} style={{margin: \"10px\"}}>\n            Place a Buy Order\n        </Button>}\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                \n                {props.type !== \"BUY\" ? <Modal.Title>Add Sell Order</Modal.Title> : <Modal.Title>Add Buy Order</Modal.Title>}\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form onSubmit={onSubmit} method=\"POST\">\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Amount of BitCoin</Form.Label>\n                        <Form.Control value={sellOrder.amount} onChange={(e) => setSellOrder({ ...sellOrder, amount: e.target.value })} type=\"number\" placeholder=\"Enter amount\" required min=\"0.00\" step=\"0.00000001\"/>\n                    </Form.Group>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"currency\">Sell Currency</label>\n                        <select\n                            name=\"currency\"\n                            id=\"currency\"\n                            value={sellOrder.currency}\n                            className=\"form-control\"\n                            onChange={handleChange}>\n                            {currencyOption}\n                        </select>\n                    </div>\n                    <p>Sell Type</p>\n                    <div key=\"inline-radio\" className=\"mb-3\">\n                        <Form.Check inline name=\"group1\" value=\"Market Order\" onClick={(e)=> setSellOrder({...sellOrder, transactionType: e.target.value})} label=\"Market Order\" type=\"radio\" id=\"inline-radio-1\" />\n                        <Form.Check inline name=\"group1\" value=\"Limit Order\" onClick={(e)=> setSellOrder({...sellOrder, transactionType: e.target.value})} label=\"Limit Order\" type=\"radio\" id=\"inline-radio-1\" />\n                    </div>\n                    {sellOrder.transactionType === \"Limit Order\" ? \n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Limit Order</Form.Label>\n                        <Form.Control value={sellOrder.price} onChange={(e) => setSellOrder({ ...sellOrder, price: e.target.value })} type=\"number\" placeholder=\"Enter Limit Order\" required presicion={2} min=\"0.00\" step=\"0.01\"/>\n                    </Form.Group> : null}\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n        </>\n    );\n}\n\nexport default Order"]},"metadata":{},"sourceType":"module"}