{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/components/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Card, ListGroup, ListGroupItem, Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { deleteFromOrders, getFromOrders, updateToOrder } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Detail = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const user = useSelector(state => state.auth ? state.auth.user : null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [sellOrder, setSellOrder] = useState({\n    currency: \"\",\n    price: \"\",\n    btc_quantity: \"\",\n    transaction_type: \"\"\n  });\n  useEffect(() => {\n    if (props.detail) {\n      console.log(\"props.detail\", props.detail);\n      setSellOrder(props.detail);\n      console.log(\"sellOrder\", sellOrder);\n    }\n  }, [props.detail]);\n  let currencies = [\"EUR\", \"USD\", \"GBP\", \"INR\", \"RMB\", \"USD\"];\n  let currencyOption = [];\n  currencyOption.push( /*#__PURE__*/_jsxDEV(\"option\", {\n    value: sellOrder.currency,\n    children: sellOrder.currency\n  }, 100, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this));\n  currencies = currencies.filter(c => c !== sellOrder.currency);\n  currencies.map((item, index) => {\n    currencyOption.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, this));\n  });\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.transaction_type === 'checkbox' ? target.checked : target.value;\n    setSellOrder({ ...sellOrder,\n      currency: value\n    });\n  };\n\n  const handleUpdate = async () => {\n    console.log(\"send update\", sellOrder);\n\n    if (sellOrder.transaction_type === \"Market Order\") {\n      setSellOrder({ ...sellOrder,\n        price: 1000\n      });\n    } // awiting for the update api\n\n\n    await dispatch(updateToOrder(sellOrder));\n    setShow(false);\n  };\n\n  const cancelOrder = async () => {\n    await dispatch(deleteFromOrders(sellOrder.ID));\n    await dispatch(getFromOrders(user.username));\n  };\n\n  console.log(\"sellOrder.btc_quantity\", sellOrder.btc_quantity);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Amount of BitCoin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: parseFloat(sellOrder.btc_quantity),\n          onChange: e => setSellOrder({ ...sellOrder,\n            btc_quantity: e.target.value\n          }),\n          type: \"number\",\n          placeholder: \"Enter BTC Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          children: \"Sell Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"currency\",\n          id: \"currency\",\n          value: sellOrder.currency,\n          className: \"form-control\",\n          onChange: handleChange,\n          children: currencyOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sell Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          name: \"group1\",\n          value: \"Market Order\",\n          onClick: e => setSellOrder({ ...sellOrder,\n            transaction_type: e.target.value\n          }),\n          label: \"Market Order\",\n          type: \"radio\",\n          id: \"inline-radio-1\",\n          checked: sellOrder.transaction_type === \"Market Order\" ? \"checked\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          name: \"group1\",\n          value: \"Limit Order\",\n          onClick: e => setSellOrder({ ...sellOrder,\n            transaction_type: e.target.value\n          }),\n          label: \"Limit Order\",\n          type: \"radio\",\n          id: \"inline-radio-1\",\n          checked: sellOrder.transaction_type === \"Limit Order\" ? \"checked\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, \"inline-radio\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), sellOrder.transaction_type === \"Limit Order\" ? /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Limit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: sellOrder.price,\n          onChange: e => setSellOrder({ ...sellOrder,\n            price: e.target.value\n          }),\n          type: \"number\",\n          placeholder: \"Enter Limit Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleUpdate,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: cancelOrder,\n        className: \"ml-3\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Detail, \"Oo1r5inkzgIrMeaXejlto+2ljG4=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/components/Detail.js"],"names":["React","useState","useEffect","Card","ListGroup","ListGroupItem","Form","Button","useDispatch","useSelector","useHistory","deleteFromOrders","getFromOrders","updateToOrder","Detail","props","show","setShow","handleClose","handleShow","user","state","auth","history","dispatch","sellOrder","setSellOrder","currency","price","btc_quantity","transaction_type","detail","console","log","currencies","currencyOption","push","filter","c","map","item","index","handleChange","event","target","value","checked","handleUpdate","cancelOrder","ID","username","parseFloat","e"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { useEffect } from 'react';\nimport { Card, ListGroup, ListGroupItem, Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { deleteFromOrders, getFromOrders, updateToOrder } from '../actions/orderActions';\nconst Detail = (props) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const user = useSelector((state) => state.auth ? state.auth.user : null)\n    \n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [sellOrder, setSellOrder] = useState({\n        currency: \"\",\n        price: \"\",\n        btc_quantity: \"\",\n        transaction_type: \"\"\n    })\n\n    useEffect(()=>{\n        if(props.detail){\n            console.log(\"props.detail\", props.detail);\n            setSellOrder(props.detail)\n            console.log(\"sellOrder\", sellOrder);\n        }\n    }, [props.detail])\n\n    let currencies = [\"EUR\", \"USD\", \"GBP\", \"INR\", \"RMB\", \"USD\"]\n    let currencyOption = [];\n    currencyOption.push(<option value={sellOrder.currency} key={100}>{sellOrder.currency}</option>)\n    currencies = currencies.filter((c) => c !== sellOrder.currency)\n    currencies.map((item, index) => {\n        currencyOption.push(<option value={item} key={index}>{item}</option>)\n    });\n\n    const handleChange = event => {\n        const target = event.target;\n        const value = target.transaction_type === 'checkbox' ? target.checked : target.value;\n        setSellOrder({...sellOrder, currency: value})\n    }\n\n    const handleUpdate = async() => {\n        console.log(\"send update\", sellOrder);\n        if(sellOrder.transaction_type === \"Market Order\"){\n            setSellOrder({...sellOrder, price: 1000})\n        }\n        // awiting for the update api\n        await dispatch(updateToOrder(sellOrder))\n        setShow(false)\n    }\n\n    const cancelOrder = async () => {\n        await dispatch(deleteFromOrders(sellOrder.ID))\n        await dispatch(getFromOrders(user.username))\n    }\n\n    console.log(\"sellOrder.btc_quantity\", sellOrder.btc_quantity)\n    return (\n        <>\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Amount of BitCoin</Form.Label>\n                    <Form.Control value={parseFloat(sellOrder.btc_quantity)} onChange={(e) => setSellOrder({ ...sellOrder, btc_quantity: e.target.value })} type=\"number\" placeholder=\"Enter BTC Amount\" />\n                </Form.Group>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"currency\">Sell Currency</label>\n                    <select\n                        name=\"currency\"\n                        id=\"currency\"\n                        value={sellOrder.currency}\n                        className=\"form-control\"\n                        onChange={handleChange}>\n                        {currencyOption}\n                    </select>\n                </div>\n                <p>Sell Type</p>\n                <div key=\"inline-radio\" className=\"mb-3\">\n                    <Form.Check inline name=\"group1\" value=\"Market Order\" onClick={(e)=> setSellOrder({...sellOrder, transaction_type: e.target.value})} label=\"Market Order\" type=\"radio\" id=\"inline-radio-1\" checked={sellOrder.transaction_type === \"Market Order\" ? \"checked\" : null}/>\n                    <Form.Check inline name=\"group1\" value=\"Limit Order\" onClick={(e)=> setSellOrder({...sellOrder, transaction_type: e.target.value})} label=\"Limit Order\" type=\"radio\" id=\"inline-radio-1\" checked={sellOrder.transaction_type === \"Limit Order\" ? \"checked\" : null}/>\n                </div>\n                {sellOrder.transaction_type === \"Limit Order\" ? \n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Limit Order</Form.Label>\n                    <Form.Control value={sellOrder.price} onChange={(e) => setSellOrder({ ...sellOrder, price: e.target.value })} type=\"number\" placeholder=\"Enter Limit Price\" />\n                </Form.Group> : null}\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Edit\n                </Button>\n                <Button variant=\"danger\" onClick={cancelOrder} className=\"ml-3\">\n                    Cancel\n                </Button>\n            </Form>\n        </>\n    );\n}\n\nexport default Detail"]},"metadata":{},"sourceType":"module"}