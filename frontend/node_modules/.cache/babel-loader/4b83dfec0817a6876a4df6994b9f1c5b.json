{"ast":null,"code":"var _jsxFileName = \"/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Bank.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Row, Col, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { addBank } from '../actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bank = () => {\n  _s();\n\n  const user = useSelector(state => state.auth ? state.auth.user : null);\n  const [bankInfo, setBankInfo] = useState({\n    bank: '',\n    number: '',\n    name: '',\n    currency: 'EUR',\n    balance: ''\n  }); // todo: address should be replaced with street and city\n\n  const [addressInfo, setAddressInfo] = useState({\n    address: '',\n    country: 'Algeria',\n    state: '',\n    zip: ''\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSubmit = async e => {\n    e.preventDefault(); // todo change bank structure?\n    // ad-hoc fixing right now\n\n    let bankInfoCopy = { ...bankInfo\n    };\n    const currencyName = bankInfoCopy.currency.toLowerCase();\n    bankInfoCopy.balance = {};\n    bankInfoCopy.balance[currencyName] = bankInfo.balance;\n    let addressInfoCopy = { ...addressInfo\n    }; // addressInfoCopy['city'] = 'San Jose'; // hardcode\n\n    addressInfoCopy['street'] = addressInfoCopy.address;\n    delete addressInfoCopy.address;\n    const userId = localStorage.getItem('id'); // todo get from redux\n\n    const bankData = {\n      id: userId,\n      bank: bankInfoCopy,\n      address: addressInfoCopy\n    }; // console.log('add bankinfo', bankInfo, addressInfo);\n\n    console.log('add bank', bankData);\n    dispatch(addBank(bankData, history));\n  };\n\n  const currencies = ['EUR', \"USD\", 'GBP', 'INR', 'RMB'];\n  let currencyOption = currencies.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this);\n  });\n  const countires = ['Algeria', 'China', 'Malaysia', 'The United State', 'France'];\n  let countryOption = countires.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this);\n  });\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const targetname = target.name;\n    console.log(targetname, value);\n\n    if (targetname === 'country') {\n      setAddressInfo({ ...addressInfo,\n        [targetname]: value\n      });\n    } else {\n      setBankInfo({ ...bankInfo,\n        [targetname]: value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        method: \"POST\",\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Billing address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicAddress\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"1234 Main St\",\n            value: addressInfo.address,\n            onChange: e => setAddressInfo({ ...addressInfo,\n              address: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"country\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"country\",\n                id: \"country\",\n                value: addressInfo.country,\n                className: \"form-control\",\n                onChange: handleChange,\n                children: countryOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicState\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: addressInfo.city,\n                onChange: e => setAddressInfo({ ...addressInfo,\n                  city: e.target.value\n                }),\n                type: \"city\",\n                placeholder: \"Cupertino\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicState\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: addressInfo.state,\n                onChange: e => setAddressInfo({ ...addressInfo,\n                  state: e.target.value\n                }),\n                type: \"state\",\n                placeholder: \"CA\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicZip\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Zip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"zip\",\n                value: addressInfo.zip,\n                onChange: e => setAddressInfo({ ...addressInfo,\n                  zip: e.target.value\n                }),\n                placeholder: \"95111\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Payment Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"currency\",\n            children: \"Default Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"currency\",\n            id: \"currency\",\n            value: bankInfo.currency,\n            className: \"form-control\",\n            onChange: handleChange,\n            children: currencyOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicBankName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Bank Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: bankInfo.bank,\n            onChange: e => setBankInfo({ ...bankInfo,\n              bank: e.target.value\n            }),\n            type: \"text\",\n            placeholder: \"Wells Fargo Bank\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicCardName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name On Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: bankInfo.name,\n                onChange: e => setBankInfo({ ...bankInfo,\n                  name: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                children: \"Full name as displayed on card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicState\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Bank Account Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: bankInfo.number,\n                onChange: e => setBankInfo({ ...bankInfo,\n                  number: e.target.value\n                }),\n                type: \"text\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicState\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: bankInfo.balance,\n              onChange: e => setBankInfo({ ...bankInfo,\n                balance: e.target.value\n              }),\n              type: \"number\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          style: {\n            width: '100%'\n          },\n          children: \"Add Bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Bank, \"OLFX+fji6t0lgJNK74I+E4fXDDA=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = Bank;\nexport default Bank;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bank\");","map":{"version":3,"sources":["/Users/qiuyutianwen/Documents/GitHub/BitCorner/frontend/src/pages/Bank.js"],"names":["React","useState","Button","Row","Col","Form","useDispatch","useSelector","useHistory","addBank","Bank","user","state","auth","bankInfo","setBankInfo","bank","number","name","currency","balance","addressInfo","setAddressInfo","address","country","zip","dispatch","history","onSubmit","e","preventDefault","bankInfoCopy","currencyName","toLowerCase","addressInfoCopy","userId","localStorage","getItem","bankData","id","console","log","currencies","currencyOption","map","item","index","countires","countryOption","handleChange","event","target","value","targetname","width","city"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Row, Col, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { addBank } from '../actions/authActions';\n\nconst Bank = () => {\n\tconst user = useSelector((state) => state.auth ? state.auth.user : null)\n\tconst [bankInfo, setBankInfo] = useState({\n\t\tbank: '',\n\t\tnumber: '',\n\t\tname: '',\n\t\tcurrency: 'EUR',\n\t\tbalance: '',\n\t});\n\t// todo: address should be replaced with street and city\n\tconst [addressInfo, setAddressInfo] = useState({\n\t\taddress: '',\n\t\tcountry: 'Algeria',\n\t\tstate: '',\n\t\tzip: '',\n\t});\n\n\tconst dispatch = useDispatch();\n\tconst history = useHistory()\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\t// todo change bank structure?\n\t\t// ad-hoc fixing right now\n\t\tlet bankInfoCopy = { ...bankInfo };\n\t\tconst currencyName = bankInfoCopy.currency.toLowerCase();\n\t\tbankInfoCopy.balance = {};\n\t\tbankInfoCopy.balance[currencyName] = bankInfo.balance;\n\n\t\tlet addressInfoCopy = { ...addressInfo };\n\t\t// addressInfoCopy['city'] = 'San Jose'; // hardcode\n\t\taddressInfoCopy['street'] = addressInfoCopy.address;\n\t\tdelete addressInfoCopy.address;\n\n\t\tconst userId = localStorage.getItem('id'); // todo get from redux\n\n\t\tconst bankData = {\n\t\t\tid: userId,\n\t\t\tbank: bankInfoCopy,\n\t\t\taddress: addressInfoCopy,\n\t\t};\n\t\t// console.log('add bankinfo', bankInfo, addressInfo);\n\t\tconsole.log('add bank', bankData);\n\t\tdispatch(addBank(bankData, history));\n\t};\n\n\tconst currencies = ['EUR',  \"USD\", 'GBP', 'INR', 'RMB'];\n\tlet currencyOption = currencies.map((item, index) => {\n\t\treturn (\n\t\t\t<option value={item} key={index}>\n\t\t\t\t{item}\n\t\t\t</option>\n\t\t);\n\t});\n\n\tconst countires = [\n\t\t'Algeria',\n\t\t'China',\n\t\t'Malaysia',\n\t\t'The United State',\n\t\t'France',\n\t];\n\tlet countryOption = countires.map((item, index) => {\n\t\treturn (\n\t\t\t<option value={item} key={index}>\n\t\t\t\t{item}\n\t\t\t</option>\n\t\t);\n\t});\n\n\tconst handleChange = (event) => {\n\t\tconst target = event.target;\n\t\tconst value = target.value;\n\t\tconst targetname = target.name;\n\t\tconsole.log(targetname, value);\n\t\tif (targetname === 'country') {\n\t\t\tsetAddressInfo({ ...addressInfo, [targetname]: value });\n\t\t} else {\n\t\t\tsetBankInfo({ ...bankInfo, [targetname]: value });\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row className='justify-content-center'>\n\t\t\t\t<h4>Add Bank</h4>\n\t\t\t</Row>\n\t\t\t<Row className='justify-content-center'>\n\t\t\t\t<Form\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\tmethod='POST'\n\t\t\t\t\tstyle={{ width: '50%' }}\n\t\t\t\t>\n\t\t\t\t\t<h5>Billing address</h5>\n\t\t\t\t\t<Form.Group controlId='formBasicAddress'>\n\t\t\t\t\t\t<Form.Label>Address</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='1234 Main St'\n\t\t\t\t\t\t\tvalue={addressInfo.address}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetAddressInfo({\n\t\t\t\t\t\t\t\t\t...addressInfo,\n\t\t\t\t\t\t\t\t\taddress: e.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={3}>\n\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t<label htmlFor='country'>Country</label>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tname='country'\n\t\t\t\t\t\t\t\t\tid='country'\n\t\t\t\t\t\t\t\t\tvalue={addressInfo.country}\n\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{countryOption}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={3}>\n\t\t\t\t\t\t\t<Form.Group controlId='formBasicState'>\n\t\t\t\t\t\t\t\t<Form.Label>City</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={addressInfo.city}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetAddressInfo({\n\t\t\t\t\t\t\t\t\t\t\t...addressInfo,\n\t\t\t\t\t\t\t\t\t\t\tcity: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype='city'\n\t\t\t\t\t\t\t\t\tplaceholder='Cupertino'\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={3}>\n\t\t\t\t\t\t\t<Form.Group controlId='formBasicState'>\n\t\t\t\t\t\t\t\t<Form.Label>State</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={addressInfo.state}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetAddressInfo({\n\t\t\t\t\t\t\t\t\t\t\t...addressInfo,\n\t\t\t\t\t\t\t\t\t\t\tstate: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype='state'\n\t\t\t\t\t\t\t\t\tplaceholder='CA'\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col xs={3}>\n\t\t\t\t\t\t\t<Form.Group controlId='formBasicZip'>\n\t\t\t\t\t\t\t\t<Form.Label>Zip</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype='zip'\n\t\t\t\t\t\t\t\t\tvalue={addressInfo.zip}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetAddressInfo({\n\t\t\t\t\t\t\t\t\t\t\t...addressInfo,\n\t\t\t\t\t\t\t\t\t\t\tzip: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder='95111'\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<hr className='my-4'></hr>\n\n\t\t\t\t\t<h5>Payment Information</h5>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='currency'>Default Currency</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname='currency'\n\t\t\t\t\t\t\tid='currency'\n\t\t\t\t\t\t\tvalue={bankInfo.currency}\n\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{currencyOption}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Form.Group controlId='formBasicBankName'>\n\t\t\t\t\t\t<Form.Label>Bank Name</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tvalue={bankInfo.bank}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetBankInfo({\n\t\t\t\t\t\t\t\t\t...bankInfo,\n\t\t\t\t\t\t\t\t\tbank: e.target.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Wells Fargo Bank'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Form.Group controlId='formBasicCardName'>\n\t\t\t\t\t\t\t\t<Form.Label>Name On Card</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={bankInfo.name}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetBankInfo({\n\t\t\t\t\t\t\t\t\t\t\t...bankInfo,\n\t\t\t\t\t\t\t\t\t\t\tname: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Form.Text>\n\t\t\t\t\t\t\t\t\tFull name as displayed on card\n\t\t\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Form.Group controlId='formBasicState'>\n\t\t\t\t\t\t\t\t<Form.Label>Bank Account Number</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={bankInfo.number}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetBankInfo({\n\t\t\t\t\t\t\t\t\t\t\t...bankInfo,\n\t\t\t\t\t\t\t\t\t\t\tnumber: e.target.value,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Form.Group controlId='formBasicState'>\n\t\t\t\t\t\t\t<Form.Label>Balance</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tvalue={bankInfo.balance}\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\tsetBankInfo({\n\t\t\t\t\t\t\t\t\t\t...bankInfo,\n\t\t\t\t\t\t\t\t\t\tbalance: e.target.value,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Bank\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Row>\n\t\t</>\n\t);\n}\n\nexport default Bank;\n"]},"metadata":{},"sourceType":"module"}